ORM - SQLAlchemy

Scheduler
- Store upcoming earnings -> refactor + set realistic cron

alerting
- table with registered scheduled tasks, when they were triggered and when they should be again triggered, alert when some trigger is late
- insider trading

tests
- db
- server_notifier
- ical_exporter




Actual
- insider transakce
- https://polygon.io/docs/stocks/get_v3_reference_dividends - 5 calls / minute
- https://polygon.io/docs/stocks/get_vx_reference_financials  - 5 calls / minute ale lze vratit celou historii najednou v jednom dotazu
- trendy do budoucna pomoci 1year option price
- dopocitat denni pe ratio podle annual/qtrly pe a continualni ceny
- dopocitavat tickery - sectory, industry, cely market
- outlook zrejme manualne z earnings
- zjisteni zda jsou nove kvartalni/annual vysledky dle nacteni vsech dat za posledni x dni/weeks
- ulozit marze
- spocitat volume weighted MA (250) a sledovat aktualni pocet procent ceny (discount) od MA
- vyber nejlepsich akcii - vybrat urcite metriky, seradit podle kazde z nich vsechny tickery a nasledne secist vsechny poradi pro kazdy ticker a zverejnit celkove poradi
- https://oanda-api-v20.readthedocs.io/en/latest/installation.html
- log per job
- https://site.financialmodelingprep.com/developer/docs#historical-rating-company-information - 250 calls / day 
    - https://financialmodelingprep.com/api/v3/key-metrics/AAPL?period=annual&limit=200&apikey=7616470a2bfe356d3a41f9006631ea5b - valuacni metriky annualy / 5 let; pe, pb, ps, ..... spocist prumer za 5 let, porovnat s aktualni valuaci - % podhodnoceni, volatilita valuace (potencial vzrustu)
- statistika rocnich/quarter poklesu/rustu ceny vzhledem k atualni cene
- create empty records for records with errors, store error code and date of last update (tickers and tickers_data)
- pb, pe, ps, pfcf - actual vs 5y average, pro vypocet historickych p/x je potreba ulozit historicke ceny, spocitat eventualni rust pri navratu k prumeru + vazeny prumer vsech techto hodnot
- AI - predam list tickeru, funkci jak prevzit valuacni a dalsi udaje z db/internetu - zhodnoti co je nejlepsi nakoupit a za jakou cenu
     - 2 agenti - 1 ktery vyhodnocuje rizika, pesimisticky, 1 ktery je optimista a vyhodnocuje potencialni rust, musi se dohodnout na kompromisu a vydat vysledek zda a za kolik nakoupit


tickers - get row, update name, industry, sector, isin and by all new records in time_data
- ticker_id
- name
- industry
- sector
- isin
- market_cap (latest)
- price (latest)
- target_price (latest)
- pe (latest)
- recomm_mean (latest)
- recomm_avg (latest)
- div_yield (latest)
- payout_ratio (latest)
- growth_rate_5y (latest)

tickers_time_data (time series data, new record only if last value changed) - get latest row, if no row or the different value -> store new row
- tickerId
- date
- type (type of metric)
- value

- market_cap - 0
- enterprise_value - 1
- shares_outstanding - 2
- price - 3
- target_price - 4
- eps - 5
- book_per_share - 6
- pe - 7
- pb - 8
- beta - 9
- volume - 10
- avg volume - 11
- ev/ebitda - 12
- recomm_mean - 13
- recomm_count - 14
- div_yield - 15
- payout_ratio - 16
- next 5y growth - 17
- ROA - 18
- ROE - 19
- peg - 20
- ps - 21
-